<style lang="less">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>

<script>
import wepy from 'wepy';
import 'wepy-async-function';

import { setStore } from 'wepy-redux';
import configStore from './store';

const store = configStore();
setStore(store);

export default class extends wepy.app {
  config = {
    pages: [
      'pages/home',
      'pages/info',
      'pages/classify',
      'pages/guide',
      'pages/index'
    ],
    window: {
      backgroundTextStyle: 'dark',
      navigationBarBackgroundColor: '#FFFFFF',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black',
      backgroundColor: '#EFEFEF'
    },
    tabBar: {
      color: '#999999',
      selectedColor: '#ff6a3c',
      backgroundColor: '#ffffff',
      borderStyle: 'black',
      list: [
        {
          pagePath: 'pages/home',
          text: '首页',
          iconPath: 'images/icon_home.png',
          selectedIconPath: 'images/icon_home_active.png'
        },
        {
          pagePath: 'pages/classify',
          text: '分类',
          iconPath: 'images/icon_classify.png',
          selectedIconPath: 'images/icon_classify_active.png'
        },
        {
          pagePath: 'pages/guide',
          text: '领队',
          iconPath: 'images/icon_classify.png',
          selectedIconPath: 'images/icon_classify_active.png'
        },
        {
          pagePath: 'pages/info',
          text: '我的',
          iconPath: 'images/icon_info.png',
          selectedIconPath: 'images/icon_info_active.png'
        },
        {
          pagePath: 'pages/index',
          text: '测试',
          iconPath: 'images/icon_info.png',
          selectedIconPath: 'images/icon_info_active.png'
        }
      ]
    }
  };

  globalData = {
    userInfo: null
  };

  constructor() {
    super();
    this.use('requestfix');
    this.use('promisify');
  }

  onLaunch() {
    this.testAsync();
  }

  sleep(s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved');
      }, s * 1000);
    });
  }

  async testAsync() {
    const data = await this.sleep(3);
    console.log(data);
  }

  getUserInfo(cb) {
    const that = this;
    if (this.globalData.userInfo) {
      return this.globalData.userInfo;
    }
    wepy.getUserInfo({
      success(res) {
        that.globalData.userInfo = res.userInfo;
        cb && cb(res.userInfo);
      }
    });
  }
}
</script>
